# $Id: PKGBUILD 141367 2011-10-30 06:46:41Z allan $
# Maintainer: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: libtool requires rebuilt with each new gcc version

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - removed ada packages
#  - removed gnat (ada stuff) from gcc packaging
#  - disabled make check, too much stress, kills plugs :(
#  - specifid build host, disabled distcc
#  - patch for v6h/v7h gnueabihf triplet
#  - replaced bugurl with our GitHub issue page

# 03-05-2013 Raspi-Build: Maciej Szeptuch (Neverous) <neverous@neverous.info>
#   - Linaro gcc 2013.04
#   - removed objc, fortran, go
#   - Disabled libstdc++ man pages

noautobuild=1

pkgname=('gcc' 'gcc-libs')
pkgver=4.8.0
pkgrel=2
_linaro_gcc=4.8
_linaro_ver=2013.04
_snapshot=linaro-${_linaro_gcc}-${_linaro_ver}
pkgdesc="The GNU Compiler Collection"
arch=('armv6zk')
license=('GPL' 'LGPL' 'FDL' 'custom')
url="http://gcc.gnu.org"
makedepends=('binutils>=2.23' 'libmpc' 'cloog' 'doxygen')
checkdepends=('dejagnu' 'inetutils')
options=('!libtool' '!emptydirs' '!distcc')
source=(http://launchpad.net/gcc-linaro/${_linaro_gcc}/${_linaro_gcc}-${_linaro_ver}/+download/gcc-linaro-${_linaro_gcc}-${_linaro_ver}.tar.bz2)

if [ -n "${_snapshot}" ]; then
    _basedir=gcc-${_snapshot}
else
    _basedir=gcc-${pkgver}
fi

prepare() {
    cd ${srcdir}/${_basedir}

    # Do not run fixincludes
    sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

    echo ${pkgver} > gcc/BASE-VER

    # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
    sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

    mkdir ${srcdir}/gcc-build
}

build() {
    cd ${srcdir}/gcc-build

    # using -pipe causes spurious test-suite failures
    # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
    CFLAGS=${CFLAGS/-pipe/}
    CXXFLAGS=${CXXFLAGS/-pipe/}

    ${srcdir}/${_basedir}/configure --prefix=/usr \
        --libdir=/usr/lib --libexecdir=/usr/lib \
        --mandir=/usr/share/man --infodir=/usr/share/info \
        --with-bugurl=https://github.com/archlinuxarm/PKGBUILDs/issues \
        --enable-languages=c,c++,lto \
        --enable-shared --enable-threads=posix \
        --with-system-zlib --enable-__cxa_atexit \
        --disable-libunwind-exceptions --enable-clocale=gnu \
        --disable-libstdcxx-pch \
        --enable-gnu-unique-object --enable-linker-build-id \
        --enable-cloog-backend=isl --disable-cloog-version-check \
        --enable-lto --enable-gold --enable-ld=default \
        --enable-plugin --with-plugin-ld=ld.gold \
        --with-linker-hash-style=gnu --disable-install-libiberty \
        --disable-multilib --disable-libssp --disable-werror \
        --enable-checking=release \
        --with-arch=armv6zk --with-float=hard --with-fpu=vfp --with-cpu=arm1176jzf-s --host=arm-raspi-linux-gnueabi --build=arm-raspi-linux-gnueabi --target=arm-raspi-linux-gnueabi
    make

    # make documentation
    cd $CHOST/libstdc++-v3
    make doc-man-doxygen
}

check() {
    cd ${srcdir}/gcc-build

    # increase stack size to prevent test failures
    # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=31827
    #ulimit -s 32768

    # do not abort on error as some are "expected"
    #make -k check || true
    #${srcdir}/${_basedir}/contrib/test_summary
}

package_gcc-libs()
{
    pkgdesc="Runtime libraries shipped by GCC"
    groups=('base')
    depends=('glibc>=2.17')
    install=gcc-libs.install

    cd ${srcdir}/gcc-build
    make -j1 -C $CHOST/libgcc DESTDIR=${pkgdir} install-shared
    for lib in libmudflap libgomp libstdc++-v3/src libitm; do
        make -j1 -C $CHOST/$lib DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
    done
    make -j1 -C $CHOST/libstdc++-v3/po DESTDIR=${pkgdir} install
    make -j1 -C $CHOST/libgomp DESTDIR=${pkgdir} install-info
    make -j1 -C $CHOST/libitm DESTDIR=${pkgdir} install-info

    make -j1 DESTDIR=${pkgdir} install-target-libgfortran
    make -j1 DESTDIR=${pkgdir} install-target-libobjc

    # remove unnecessary files installed by install-target-{libquadmath,libgfortran,libobjc}
    rm -rf ${pkgdir}/usr/lib/{gcc/,libgfortran.spec}

    # remove static libraries
    find ${pkgdir} -name *.a -delete

    # Install Runtime Library Exception
    install -Dm644 ${srcdir}/${_basedir}/COPYING.RUNTIME \
        ${pkgdir}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc()
{
    pkgdesc="The GNU Compiler Collection - C and C++ frontends"
    depends=("gcc-libs=$pkgver-$pkgrel" 'binutils>=2.23' 'libmpc' 'cloog')
    groups=('base-devel')
    install=gcc.install

    cd ${srcdir}/gcc-build

    make -j1 DESTDIR=${pkgdir} install

    install -d $pkgdir/usr/share/gdb/auto-load/usr/lib
    mv $pkgdir{,/usr/share/gdb/auto-load}/usr/lib/libstdc++.so.6.0.18-gdb.py

    # unfortunately it is much, much easier to install the lot and clean-up the mess...
    rm -f $pkgdir/usr/bin/{{$CHOST-,}gfortran,{$CHOST-,}gccgo}
    rm -f $pkgdir/usr/lib/*.so*
    rm -f $pkgdir/usr/lib/lib{atomic,gfortran,go{,begin},iberty,objc}.a
    rm -f $pkgdir/usr/lib/libgfortran.spec
    rm -f -r $pkgdir/usr/lib/gcc/$CHOST/${pkgver}/{finclude,include/objc}
    rm -f $pkgdir/usr/lib/gcc/$CHOST/${pkgver}/{cc1obj{,plus},f951,go1}
    rm -f $pkgdir/usr/lib/gcc/$CHOST/${pkgver}/{libcaf_single,libgfortranbegin}.a
    rm -f -r $pkgdir/usr/lib/go
    rm -f $pkgdir/usr/share/info/{gccgo,gfortran,libgomp,libquadmath,libitm}.info
    rm -f $pkgdir/usr/share/locale/{de,fr}/LC_MESSAGES/libstdc++.mo
    rm -f $pkgdir/usr/share/man/man1/{gccgo,gfortran}.1

    # many packages expect this symlink
    #install -dm755 ${pkgdir}/lib
    ln -s gcc ${pkgdir}/usr/bin/cc

    # POSIX conformance launcher scripts for c89 and c99
    cat > $pkgdir/usr/bin/c89 <<"EOF"
#!/bin/sh
fl="-std=c89"
for opt; do
    case "$opt" in
        -ansi|-std=c89|-std=iso9899:1990) fl="";;
    -std=*) echo "`basename $0` called with non ANSI/ISO C option $opt" >&2
        exit 1;;
    esac
done
exec gcc $fl ${1+"$@"}
EOF

    cat > $pkgdir/usr/bin/c99 <<"EOF"
#!/bin/sh
fl="-std=c99"
for opt; do
    case "$opt" in
        -std=c99|-std=iso9899:1999) fl="";;
    -std=*) echo "`basename $0` called with non ISO C99 option $opt" >&2
        exit 1;;
    esac
done
exec gcc $fl ${1+"$@"}
EOF

    chmod 755 $pkgdir/usr/bin/c{8,9}9

    # install the libstdc++ man pages
    #install -dm755 ${pkgdir}/usr/share/man/man3
    #install -m644 -t ${pkgdir}/usr/share/man/man3 \
    #    ${CHOST}/libstdc++-v3/doc/doxygen/man/man3/*.3

    # Install Runtime Library Exception
    install -Dm644 ${srcdir}/${_basedir}/COPYING.RUNTIME \
        ${pkgdir}/usr/share/licenses/gcc/RUNTIME.LIBRARY.EXCEPTION
}
md5sums=('b6b8195019c7cb93629727ad14eaf7ca')
